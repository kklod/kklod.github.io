define(["globalize","connectionManager","serverNotifications","require","loading","dom","recordingHelper","events","paper-icon-button-light","emby-button","flexStyles"],function(globalize,connectionManager,serverNotifications,require,loading,dom,recordingHelper,events){"use strict";function onDataFetched(item){var options=this.options;options.program=item,function(parent,program){program.IsSeries?(parent.querySelector(".recordSeriesContainer").classList.remove("hide"),parent.querySelector(".recordSeriesContainer").classList.remove("hide")):parent.querySelector(".recordSeriesContainer").classList.add("hide");var btnManageSeriesRecording=parent.querySelector(".btnManageSeriesRecording");program.SeriesTimerId?(btnManageSeriesRecording&&btnManageSeriesRecording.classList.remove("hide"),parent.querySelector(".seriesRecordingButton .recordingIcon").classList.add("recordingIcon-active"),parent.querySelector(".seriesRecordingButtonText").innerHTML=globalize.translate("HeaderCancelSeries")):(btnManageSeriesRecording&&btnManageSeriesRecording.classList.add("hide"),parent.querySelector(".seriesRecordingButton .recordingIcon").classList.remove("recordingIcon-active"),parent.querySelector(".seriesRecordingButtonText").innerHTML=globalize.translate("HeaderRecordSeries")),program.TimerId&&"Cancelled"!==program.Status?(parent.querySelector(".btnManageRecording").classList.remove("hide"),parent.querySelector(".singleRecordingButton .recordingIcon").classList.add("recordingIcon-active"),"InProgress"===program.Status?parent.querySelector(".singleRecordingButtonText").innerHTML=globalize.translate("HeaderStopRecording"):parent.querySelector(".singleRecordingButtonText").innerHTML=globalize.translate("HeaderDoNotRecord")):(parent.querySelector(".btnManageRecording").classList.add("hide"),parent.querySelector(".singleRecordingButton .recordingIcon").classList.remove("recordingIcon-active"),parent.querySelector(".singleRecordingButtonText").innerHTML=globalize.translate("Record"))}(options.parent,item)}function RecordingEditor(options){this.options=options,this.embed();var timerChangedHandler=function(e,apiClient,data){var options=this.options,refresh=!1;data.Id&&options.program.TimerId===data.Id&&(refresh=!0),data.ProgramId&&options&&options.program.Id===data.ProgramId&&(refresh=!0),refresh&&events.trigger(this,"recordingchanged")}.bind(this);this.timerChangedHandler=timerChangedHandler,events.on(serverNotifications,"TimerCreated",timerChangedHandler),events.on(serverNotifications,"TimerCancelled",timerChangedHandler);var seriesTimerChangedHandler=function(e,apiClient,data){var options=this.options,refresh=!1;data.Id&&options.program.SeriesTimerId===data.Id&&(refresh=!0),data.ProgramId&&options&&options.program.Id===data.ProgramId&&(refresh=!0),refresh&&events.trigger(this,"recordingchanged")}.bind(this);this.seriesTimerChangedHandler=seriesTimerChangedHandler,events.on(serverNotifications,"SeriesTimerCreated",seriesTimerChangedHandler),events.on(serverNotifications,"SeriesTimerCancelled",seriesTimerChangedHandler)}function onRecordSeriesChange(e){this.changed=!0;var promise,self=this,options=this.options,apiClient=connectionManager.getApiClient(options.program);!e.target.closest("BUTTON").querySelector("i").classList.contains("recordingIcon-active")?(options.parent.querySelector(".recordSeriesContainer").classList.remove("hide"),options.program.SeriesTimerId||(promise=options.program.TimerId?recordingHelper.changeRecordingToSeries(apiClient,options.program.TimerId,options.program.Id):recordingHelper.createRecording(apiClient,options.program.Id,!0),loading.show(),promise.then(function(){events.trigger(self,"seriesrecordingchanged")}))):options.program.SeriesTimerId&&(loading.show(),apiClient.cancelLiveTvSeriesTimer(options.program.SeriesTimerId).then(function(){var msg;msg=globalize.translate("RecordingCancelled"),require(["toast"],function(toast){toast(msg)}),events.trigger(self,"seriesrecordingchanged")}))}return RecordingEditor.prototype.embed=function(){var options=this.options,context=options.parent,singleRecordingButton=context.querySelector(".singleRecordingButton");options.program.AsSeries||singleRecordingButton.classList.remove("hide"),singleRecordingButton.addEventListener("click",function(e){this.changed=!0;var self=this,options=this.options,apiClient=connectionManager.getApiClient(options.program),isChecked=!e.target.closest("BUTTON").querySelector("i").classList.contains("recordingIcon-active"),hasEnabledTimer=options.program.TimerId&&"Cancelled"!==options.program.Status;isChecked?hasEnabledTimer||(loading.show(),recordingHelper.createRecording(apiClient,options.program.Id,!1).then(function(){events.trigger(self,"recordingchanged")})):hasEnabledTimer&&(loading.show(),recordingHelper.cancelTimer(apiClient,options.program.TimerId,!0).then(function(){events.trigger(self,"recordingchanged")}))}.bind(this)),context.querySelector(".seriesRecordingButton").addEventListener("click",onRecordSeriesChange.bind(this)),context.querySelector(".btnManageRecording").addEventListener("click",function(e){var self,options=this.options;options.program.TimerId&&"Cancelled"!==options.program.Status&&(self=this,require(["recordingEditor"],function(recordingEditor){recordingEditor.show(options.program.TimerId,options.program.ServerId,{enableCancel:!1}).then(function(){self.changed=!0})}))}.bind(this)),onDataFetched.call(this,options.program)},RecordingEditor.prototype.hasChanged=function(){return this.changed},RecordingEditor.prototype.refresh=function(item){onDataFetched.call(this,item)},RecordingEditor.prototype.getProgram=function(){return this.options.program},RecordingEditor.prototype.destroy=function(){var timerChangedHandler=this.timerChangedHandler;this.timerChangedHandler=null,events.off(serverNotifications,"TimerCreated",timerChangedHandler),events.off(serverNotifications,"TimerCancelled",timerChangedHandler);var seriesTimerChangedHandler=this.seriesTimerChangedHandler;this.seriesTimerChangedHandler=null,events.off(serverNotifications,"SeriesTimerCreated",seriesTimerChangedHandler),events.off(serverNotifications,"SeriesTimerCancelled",seriesTimerChangedHandler)},RecordingEditor});
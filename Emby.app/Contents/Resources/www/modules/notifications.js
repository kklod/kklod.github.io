define(["./common/globalize.js","./emby-apiclient/events.js","./common/input/api.js"],function(_globalize,_events,_api){function sendToast(notification){require(["toast"],function(toast){toast(notification.title)})}function showNotification(notification,apiClient){if(!self.Notification||!navigator.serviceWorker||!Emby.serviceWorkerEnabled)return sendToast(notification),0;notification.timestamp=Date.now(),notification.renotify=!0,notification.tag+=apiClient.serverId(),!notification.data&&notification.actions&&(notification.data=apiClient.serverId());function onFailure(){return sendToast(notification)}return navigator.serviceWorker.getRegistration().then(function(reg){return Notification.requestPermission().then(function(permission){return"granted"!==permission?sendToast(notification):reg.showNotification(notification.title,notification).catch(onFailure)})},onFailure)}function showPackageInstallNotification(apiClient,installation,status){apiClient.getCurrentUser().then(function(user){var notification;user.Policy.IsAdministrator&&(notification={tag:status},"PackageInstallationCompleted"===status?(notification.title=_globalize.default.translate("PackageInstallCompleted").replace("{0}",installation.Name+" "+installation.Version),notification.actions=[{action:"restartserver",title:_globalize.default.translate("RestartServer")}]):"PackageInstallationCancelled"===status?notification.title=_globalize.default.translate("PackageInstallCancelled").replace("{0}",installation.Name+" "+installation.Version):"PackageInstallationFailed"===status?notification.title=_globalize.default.translate("PackageInstallFailed").replace("{0}",installation.Name+" "+installation.Version):"PackageInstalling"===status&&(notification.title=_globalize.default.translate("InstallingPackage").replace("{0}",installation.Name+" "+installation.Version),installation.PercentComplete&&(notification.body=installation.PercentComplete+"%")),notification.title&&showNotification(notification,apiClient))})}_globalize=babelHelpers.interopRequireDefault(_globalize),_events=babelHelpers.interopRequireDefault(_events),_api=babelHelpers.interopRequireDefault(_api),_events.default.on(_api.default,"PackageInstallationCompleted",function(e,apiClient,data){showPackageInstallNotification(apiClient,data,"PackageInstallationCompleted")}),_events.default.on(_api.default,"PackageInstallationFailed",function(e,apiClient,data){showPackageInstallNotification(apiClient,data,"PackageInstallationFailed")}),_events.default.on(_api.default,"PackageInstallationCancelled",function(e,apiClient,data){showPackageInstallNotification(apiClient,data,"PackageInstallationCancelled")}),_events.default.on(_api.default,"PackageInstalling",function(e,apiClient,data){showPackageInstallNotification(apiClient,data,"PackageInstalling")}),_events.default.on(_api.default,"ServerShuttingDown",function(e,apiClient,data){showNotification({title:_globalize.default.translate("ServerNameIsShuttingDown",apiClient.serverInfo().Name),tag:"ServerShuttingDown"},apiClient)}),_events.default.on(_api.default,"ServerRestarting",function(e,apiClient,data){showNotification({title:_globalize.default.translate("ServerNameIsRestarting",apiClient.serverInfo().Name),tag:"ServerRestarting"},apiClient)}),_events.default.on(_api.default,"RestartRequired",function(e,apiClient){showNotification({title:_globalize.default.translate("PleaseRestartServerName",apiClient.serverInfo().Name),tag:"RestartRequired",actions:[{action:"restartserver",title:_globalize.default.translate("RestartServer")}]},apiClient)})});
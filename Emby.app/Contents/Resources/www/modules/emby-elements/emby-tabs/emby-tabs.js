define(["dom","scroller","layoutManager","focusManager","css!./emby-tabs","scrollStyles"],function(dom,scroller,layoutManager,focusManager){"use strict";var buttonClass="emby-tab-button",activeButtonClass=buttonClass+"-active";function setActiveTabButton(tabs,newButton){newButton&&newButton.classList.add(activeButtonClass)}function onFocus(e){var delay;layoutManager.tv&&(this.clearFocusTimeout(),e.target.closest("."+buttonClass)&&(delay=-1===this.selectedIndex()?0:700,this.focusTimeout=setTimeout(function(tabs,e){return function(){var target,activeElement=document.activeElement;activeElement&&(activeElement!==(target=e.target)&&!activeElement.contains(target)||onClick.call(tabs,e))}}(this,e),delay)))}function triggerBeforeTabChangeInternal(tabs,index,previousIndex){var tabPanel;tabs.dispatchEvent(new CustomEvent("beforetabchange",{detail:{selectedTabIndex:index,previousIndex:previousIndex}})),null!=previousIndex&&previousIndex!==index&&(tabPanel=null)&&tabPanel.classList.remove("is-active");var newPanel=null;newPanel&&newPanel.classList.add("is-active")}function onClick(e){this.clearFocusTimeout();var previousIndex,index,current=this.querySelector("."+activeButtonClass),tabButton=e.target.closest("."+buttonClass);tabButton&&tabButton!==current&&(current&&current.classList.remove(activeButtonClass),previousIndex=current?parseInt(current.getAttribute("data-index")):null,setActiveTabButton(0,tabButton),triggerBeforeTabChangeInternal(this,index=parseInt(tabButton.getAttribute("data-index")),previousIndex),this.selectedTabIndex=index,this.dispatchEvent(new CustomEvent("tabchange",{detail:{selectedTabIndex:index,previousIndex:previousIndex}})),this.scroller&&this.scroller.toCenter(tabButton))}function onInit(){this.hasInit||(this.hasInit=!0,this.classList.contains("emby-tabs")||(this.classList.add("emby-tabs","focusable"),dom.addEventListener(this,"click",onClick,{passive:!0}),dom.addEventListener(this,"focus",onFocus,{passive:!0,capture:!0})))}var EmbyTabs=function(_HTMLDivElement){babelHelpers.inherits(EmbyTabs,_HTMLDivElement);var _super=_createSuper(EmbyTabs);function EmbyTabs(){var _this;babelHelpers.classCallCheck(this,EmbyTabs);var self=_this=_super.call(this);return onInit.call(self),babelHelpers.possibleConstructorReturn(_this,self)}return babelHelpers.createClass(EmbyTabs,[{key:"connectedCallback",value:function(){var tabs,contentScrollSlider;onInit.call(this),(tabs=this).scroller||((contentScrollSlider=tabs.querySelector(".emby-tabs-slider"))?(tabs.scroller=new scroller(tabs,{horizontal:1,slidee:contentScrollSlider,scrollBy:200,speed:120,dragHandle:1,hiddenScroll:!0,centerFocus:!0,allowNativeSmoothScroll:!1,forceNativeScroll:!0}),tabs.scroller.init()):tabs.classList.add("scrollX","hiddenScrollX","smoothScrollX")),this.onTabsChanged(),this.readyFired||(this.readyFired=!0,this.dispatchEvent(new CustomEvent("ready",{})))}},{key:"onTabsChanged",value:function(){var newTabButton,current=this.querySelector("."+activeButtonClass),currentIndex=current?parseInt(current.getAttribute("data-index")):parseInt(this.getAttribute("data-index")||"0");-1===(this.selectedTabIndex=currentIndex)||(newTabButton=this.querySelectorAll("."+buttonClass)[currentIndex])&&(setActiveTabButton(0,newTabButton),this.scroller&&this.scroller.toCenter(newTabButton,{behavior:"instant"}))}},{key:"clearFocusTimeout",value:function(){this.focusTimeout&&clearTimeout(this.focusTimeout)}},{key:"detachedCallback",value:function(){this.scroller&&(this.scroller.destroy(),this.scroller=null),dom.removeEventListener(this,"click",onClick,{passive:!0}),dom.removeEventListener(this,"focus",onFocus,{passive:!0,capture:!0})}},{key:"focus",value:function(){var selected=this.querySelector("."+activeButtonClass);selected?focusManager.focus(selected):focusManager.autoFocus(this)}},{key:"selectedIndex",value:function(selected,triggerEvent){if(null==selected)return this.selectedTabIndex||0;this.clearFocusTimeout();var current=this.selectedIndex();this.selectedTabIndex=selected;var currentTabButton,tabButtons=this.querySelectorAll("."+buttonClass);current===selected||!1===triggerEvent||-1===selected?(triggerBeforeTabChangeInternal(this,selected,current),this.dispatchEvent(new CustomEvent("tabchange",{detail:{selectedTabIndex:selected}})),currentTabButton=tabButtons[current],setActiveTabButton(0,tabButtons[selected]),current!==selected&&currentTabButton&&currentTabButton.classList.remove(activeButtonClass)):onClick.call(this,{target:tabButtons[selected]})}},{key:"triggerBeforeTabChange",value:function(){triggerBeforeTabChangeInternal(this,this.selectedIndex())}},{key:"triggerTabChange",value:function(){this.dispatchEvent(new CustomEvent("tabchange",{detail:{selectedTabIndex:this.selectedIndex()}}))}},{key:"setTabEnabled",value:function(index,enabled){var btn=this.querySelector('.emby-tab-button[data-index="'+index+'"]');enabled?btn.classList.remove("hide"):btn.classList.remove("add")}}]),EmbyTabs}(babelHelpers.wrapNativeSuper(HTMLDivElement));customElements.define("emby-tabs",EmbyTabs,{extends:"div"})});
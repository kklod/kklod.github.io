define(["exports","./../../shortcuts.js","./../../emby-apiclient/connectionmanager.js","./../../emby-apiclient/events.js","./../../common/globalize.js","./../../browser.js","./../../common/input/api.js","./../emby-button/emby-button.js"],function(_exports,_shortcuts,_connectionmanager,_events,_globalize,_browser,_api,_embyButton){function onClick(e){var itemInfo=function(button){if(button.hasAttribute("data-owned"))return _shortcuts.default.getItemFromChildNode(button,!0);var id=button.getAttribute("data-id"),serverId=button.getAttribute("data-serverid");return{Id:id,ServerId:serverId}}(this),apiClient=_connectionmanager.default.getApiClient(itemInfo);"true"!==this.getAttribute("data-played")?(apiClient.markPlayed(apiClient.getCurrentUserId(),itemInfo.Id),setState(this,!0)):(apiClient.markUnplayed(apiClient.getCurrentUserId(),itemInfo.Id),setState(this,!1))}function onUserDataChanged(e,apiClient,userData){userData.ItemId===this.getAttribute("data-id")&&setState(this,userData.Played)}function setState(button,played,updateAttribute){!function(button,played){var title=played?_globalize.default.translate("HeaderMarkUnplayed"):_globalize.default.translate("HeaderMarkPlayed");button.title=title,button.setAttribute("aria-label",title);var text=button.querySelector(".button-text");text&&(text.innerHTML=_globalize.default.translate("Played"))}(button,played);var icon=button.querySelector("i")||button;played?icon&&icon.classList.add("playstatebutton-icon","secondaryText","playstatebutton-icon-played"):icon&&(icon.classList.add("playstatebutton-icon","secondaryText"),icon.classList.remove("playstatebutton-icon-played")),!1!==updateAttribute&&button.setAttribute("data-played",played)}function clearEvents(button){var instance,name,handler;button.removeEventListener("click",onClick),(handler=(instance=button)[name="UserDataChanged"])&&(_events.default.off(_api.default,name,handler),instance[name]=null)}function bindEvents(button){var instance,name,localHandler;button.addEventListener("click",onClick),button.hasAttribute("data-owned")||(name="UserDataChanged",localHandler=onUserDataChanged.bind(instance=button),_events.default.on(_api.default,name,localHandler),instance[name]=localHandler)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_shortcuts=babelHelpers.interopRequireDefault(_shortcuts),_connectionmanager=babelHelpers.interopRequireDefault(_connectionmanager),_events=babelHelpers.interopRequireDefault(_events),_globalize=babelHelpers.interopRequireDefault(_globalize),_browser=babelHelpers.interopRequireDefault(_browser),_api=babelHelpers.interopRequireDefault(_api);var EmbyPlaystateButton=function(_EmbyButton){babelHelpers.inherits(EmbyPlaystateButton,_EmbyButton);var _super=_createSuper(EmbyPlaystateButton);function EmbyPlaystateButton(){var _this;babelHelpers.classCallCheck(this,EmbyPlaystateButton);var self=_this=_super.call(this);return babelHelpers.possibleConstructorReturn(_this,self)}return babelHelpers.createClass(EmbyPlaystateButton,[{key:"connectedCallback",value:function(){_embyButton.default.prototype.connectedCallback.call(this),bindEvents(this)}},{key:"disconnectedCallback",value:function(){_embyButton.default.prototype.disconnectedCallback.call(this),clearEvents(this)}},{key:"setItem",value:function(item){item?(this.setAttribute("data-id",item.Id),this.setAttribute("data-serverid",item.ServerId),setState(this,item.UserData&&item.UserData.Played)):(this.removeAttribute("data-id"),this.removeAttribute("data-serverid"),this.removeAttribute("data-played"))}}]),EmbyPlaystateButton}((_embyButton=babelHelpers.interopRequireDefault(_embyButton)).default);EmbyPlaystateButton.getHtml=function(played,buttonClass,iconClass){iconClass?iconClass+=" playstatebutton-icon secondaryText":iconClass="playstatebutton-icon secondaryText",played&&(iconClass+=" playstatebutton-icon-played"),buttonClass?buttonClass+=" md-icon paper-icon-button-light":buttonClass="md-icon paper-icon-button-light",iconClass&&(buttonClass+=" "+iconClass);var title=played?_globalize.default.translate("HeaderMarkUnplayed"):_globalize.default.translate("HeaderMarkPlayed");return'<button title="'+title+'" aria-label="'+title+'" tabindex="-1" is="emby-playstatebutton" data-owned="true" type="button" data-action="none" class="'+buttonClass+'" data-played="'+played+'">&#xE5CA;</button>'},customElements.define("emby-playstatebutton",EmbyPlaystateButton,{extends:"button"}),_exports.default=EmbyPlaystateButton});
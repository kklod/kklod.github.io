!function(){"use strict";function loadPromise(){if(self.Promise&&-1===navigator.userAgent.toLowerCase().indexOf("web0s"))return function(){if(self.caches&&navigator.serviceWorker&&"ios"!==self.appMode&&"android"!==self.appMode&&"windows"!==self.appMode&&"winjs"!==self.appMode&&!self.tizen)return caches.open("embyappinfo").then(function(cache){return cache.put("appversion",new Response(self.dashboardVersion||"")).then(function(){try{return navigator.serviceWorker.register("serviceworker.js").then(function(){return navigator.serviceWorker.ready.then(function(){"standalone"===self.appMode&&(self.urlCacheParam=null),Emby.serviceWorkerEnabled=!0})},catchAndResolve).then(function(reg){return reg&&reg.sync?reg.sync.register("emby-sync"):Promise.resolve()})}catch(err){console.log("Error registering serviceWorker: "+err)}},catchAndResolve)},catchAndResolve);return Promise.resolve()}().then(loadRequire);var doc=document,script=doc.createElement("script"),src="./modules/polyfills/native-promise-only.js";self.urlCacheParam&&(src+="?"+self.urlCacheParam),script.onload=loadRequire,script.src=src,doc.head.appendChild(script)}function catchAndResolve(err){return console.log("error registering service worker: "+err),Promise.resolve()}function loadRequire(){var doc=document,script=doc.createElement("script"),src="./modules/alameda/alameda.js";self.urlCacheParam&&(src+="?"+self.urlCacheParam),script.src=src,script.onload=loadApp,doc.head.appendChild(script)}function loadApp(){var doc=document,script=doc.createElement("script"),src="./app.js";self.urlCacheParam&&(src+="?"+self.urlCacheParam),script.src=src,doc.head.appendChild(script)}self.Emby={},function(){var docElem=document.documentElement,appMode=docElem.getAttribute("data-appmode");appMode&&(self.appMode=appMode);var appVersion=docElem.getAttribute("data-appversion");appVersion&&(self.dashboardVersion=appVersion),appVersion?self.urlCacheParam="v="+appVersion:appMode||(self.urlCacheParam="v="+(new Date).getTime()),loadPromise()}()}();
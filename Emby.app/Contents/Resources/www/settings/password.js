define(["loading","connectionManager","focusManager","globalize","dom","emby-linkbutton","emby-select","emby-input","emby-button","emby-checkbox"],function(loading,connectionManager,focusManager,globalize,dom){"use strict";function alertText(options){require(["alert"],function(alert){alert(options)})}function loadUser(page,params,apiClient,autoFocus){var userid=params.userId;apiClient.getUser(userid).then(function(user){apiClient.getCurrentUser().then(function(loggedInUser){var btnResetPassword=page.querySelector(".btnResetPassword"),username=page.querySelector(".username");username&&(username.innerHTML=user.Name);var showLocalAccessSection=!1;user.HasConfiguredPassword?(user.Policy.IsAdministrator?btnResetPassword&&btnResetPassword.classList.add("hide"):btnResetPassword&&btnResetPassword.classList.remove("hide"),page.querySelector(".fldCurrentPassword").classList.remove("hide"),showLocalAccessSection=!0):(btnResetPassword&&btnResetPassword.classList.add("hide"),page.querySelector(".fldCurrentPassword").classList.add("hide")),loggedInUser.Policy.IsAdministrator||user.Policy.EnableUserPreferenceAccess?page.querySelector(".passwordSection").classList.remove("hide"):page.querySelector(".passwordSection").classList.add("hide"),showLocalAccessSection&&(loggedInUser.Policy.IsAdministrator||user.Policy.EnableUserPreferenceAccess)?page.querySelector(".localAccessSection").classList.remove("hide"):page.querySelector(".localAccessSection").classList.add("hide"),page.querySelector(".txtInNetworkPassword").value="",user.Configuration.EnableLocalPassword?user.HasConfiguredEasyPassword?page.querySelector(".selectInNetworkPasswordMode").value="pin":page.querySelector(".selectInNetworkPasswordMode").value="nopassword":page.querySelector(".selectInNetworkPasswordMode").value="password",onInNetworkPasswordModeChange.call(page.querySelector(".selectInNetworkPasswordMode")),autoFocus&&focusManager.autoFocus(page)})}),page.querySelector(".txtCurrentPassword").value="",page.querySelector(".txtNewPassword").value="",page.querySelector(".txtNewPasswordConfirm").value=""}function onInNetworkPasswordModeChange(e){var form=this.closest("FORM"),txtEasyPassword=form.querySelector(".txtInNetworkPassword");"pin"===this.value?(form.querySelector(".fldInNetworkPassword").classList.remove("hide"),txtEasyPassword.setAttribute("required","required")):(form.querySelector(".fldInNetworkPassword").classList.add("hide"),txtEasyPassword.removeAttribute("required"))}return function(view,params){var apiClient=connectionManager.getApiClient(params.serverId);function onLocalAccessSaved(){loading.hide(),require(["toast"],function(toast){toast(globalize.translate("SettingsSaved"))}),loadUser(view,params,apiClient)}view.querySelector(".updatePasswordForm").addEventListener("submit",function(e){var userId;return this.querySelector(".txtNewPassword").value!==this.querySelector(".txtNewPasswordConfirm").value?alertText(globalize.translate("ErrorMessagePasswordNotMatchConfirm")):(loading.show(),userId=params.userId,apiClient.getUser(userId).then(function(user){var currentPassword="";user.HasConfiguredPassword&&(currentPassword=view.querySelector(".txtCurrentPassword").value);var newPassword=view.querySelector(".txtNewPassword").value;apiClient.updateUserPassword(userId,currentPassword,newPassword).then(function(){loading.hide(),require(["toast"],function(toast){toast(globalize.translate("PasswordSaved"))}),loadUser(view,params,apiClient)},function(){loading.hide(),alertText({title:globalize.translate("HeaderSignInError"),text:globalize.translate("MessageInvalidUser")})})})),e.preventDefault(),!1}),view.querySelector(".localAccessForm").addEventListener("submit",function(e){loading.show();var userId=params.userId,mode=view.querySelector(".selectInNetworkPasswordMode").value;return apiClient.getUser(userId).then(function(user){user.Configuration.EnableLocalPassword="password"!==mode,apiClient.updateUserConfiguration(user.Id,user.Configuration).then(function(){var easyPw;"password"===mode?onLocalAccessSaved():(easyPw="nopassword"===mode?"":view.querySelector(".txtInNetworkPassword").value,apiClient.updateEasyPassword(userId,easyPw).then(onLocalAccessSaved))})}),e.preventDefault(),!1}),view.querySelector(".selectInNetworkPasswordMode").addEventListener("change",onInNetworkPasswordModeChange);var btnResetPassword=view.querySelector(".btnResetPassword");btnResetPassword&&btnResetPassword.addEventListener("click",function(){require(["confirm"],function(confirm){confirm(globalize.translate("PasswordResetConfirmation"),globalize.translate("HeaderResetPassword")).then(function(){var userId=params.userId;loading.show(),apiClient.resetUserPassword(userId).then(function(){loading.hide(),alertText({text:globalize.translate("PasswordResetComplete"),title:globalize.translate("HeaderPasswordReset")}),loadUser(view,params,apiClient)})})})}),view.addEventListener("viewshow",function(){loadUser(view,params,apiClient,!0)});for(var btns=view.querySelectorAll(".userEditTabButton"),i=0,length=btns.length;i<length;i++)btns[i].href=btns[i].getAttribute("data-href")+"?userId="+params.userId}});